[tool.poetry]
name = "qtpy-datalogger"
version = "0.1.0"
description = "Data acquisition application using Adafruit QT Py S3"
authors = [
    "Down to the Wire <8404598+wireddown@users.noreply.github.com>",
]
license = "Apache-2.0"
readme = "README.md"

[tool.poetry.scripts]
qtpy-datalogger = "qtpy_datalogger.__main__:main"

[tool.poetry.dependencies]
python = "^3.11"
click = "^8.1.8"
pyserial = "^3.5"
wmi = "^1.5.1"
circup = "^2.1.1"
findimports = "^2.5.2"
packaging = "^24.2"
beautifulsoup4 = "^4.13.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
ruff = "^0.9.4"
pyright = "^1.1.393"

[tool.poetry.group.circup.dependencies]
circuitpython-stubs = "9.2.1"
adafruit-circuitpython-neopixel = "^6.3.15"
adafruit-circuitpython-adxl37x = "^1.2.2"

[tool.poe.poetry_hooks]
pre_build = "prebuild_tasks"

[tool.poe.tasks]
_ruff_check = "ruff check"
_ruff_diff = "ruff format --diff"
_pyright = "pyright --dependencies"
_ruff_check_fix = "ruff check --fix"
_ruff_format = "ruff format"
lint.help = "Run the analyzers for the package."
lint.sequence = ["_ruff_check", "_ruff_diff", "_pyright"]
lint.ignore_fail = "return_zero"
fix.help = "Run the code formatter on the package."
fix.sequence = ["_ruff_check_fix", "_ruff_format"]
fix.ignore_fail = "return_zero"
test.help = "Run the tests for the package."
test.cmd = "pytest"
_generate_notice = "poetry run qtpy-datalogger --verbose --generate-notice ./src/qtpy_datalogger/sensor_node/snsr/notice.toml"
prebuild_tasks.sequence = ["_generate_notice"]
prebuild_tasks.help = "[automated] Run the hooks attached to 'poetry build'."

[tool.pytest.ini_options]
addopts = "--showlocals"

[tool.pyright]
venvPath = ".venv"
verboseOutput = true
exclude = [
    ".venv",
    "docs/legacy",
]
executionEnvironments = [
    { root = "src/qtpy_datalogger/sensor_node", reportMissingModuleSource = "information", reportAttributeAccessIssue = "information" },
    { root = "." },
]

[tool.ruff]
line-length = 120
extend-exclude = [
    "docs/legacy",
]

[tool.ruff.lint]
extend-select = [
    "A",
    "ANN",
    "ASYNC",
    "B",
    "BLE",
    "C4",
    "COM",
    "D",
    "DTZ",
    "EM",
    "ERA",
    "FURB",
    "G",
    "I",
    "ICN",
    "INP",
    "ISC",
    "LOG",
    "N",
    "NPY",
    "PD",
    "PL",
    "PIE",
    "PT",
    "PTH",
    "Q",
    "RET",
    "RUF",
    "S",
    "SIM",
    "T10",
    "T20",
    "TD",
    "TRY",
    "UP",
    "W",
]
ignore = [
    "D203",
    "D211",
    "D212",
    "D400",
    "COM812",
    "G004",
    "ISC001",
    "RET504",
    "TD002",
]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
    "INP001",
    "S101",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
